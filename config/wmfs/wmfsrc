#
# This is the default wmfs config file, copy it to
# ~/.config/wmfs/wmfsrc and edit it.
#

# Include file to split configuration
# @include "~/.config/wmfs/menu-wmfsrc"

[misc]
        #font               = "luxi sans-9:bold"
        font               = "dejavu sans-9:bold"
        #font               = "droid sans-9:bold"
        #font               = "terminus-10:bold"
        #font               = "terminus-ja-11:bold"
        #font               = "Fixed-14:bold"
        #font               = "unifont-10:bold"
        raisefocus         = true
        focus_follow_mouse = true

        # Opacity of inactive windows out of 255
        opacity            = 248

        # focus_pointer_click: click on unfocused client area:
        # true  -- default, set focus
        # false -- click go to client; including dockapps
        focus_pointer_click = true
        status_timing       = 1     #seconds
[/misc]

[bar]
        bg     = "#0f0e0c"
        fg     = "#d3caaa"
        border = false
        # selbar = false   #not worked now, see section [selbar]

        [systray]
                # Enable/disable systray
                #active = true
                active = false

                # Screen of systray
                screen = 0

                # Spacing between tray icons
                spacing = 3
        [/systray]

        # Remove this section to disable the selbar.
        [selbar]
                bg = "#0c0c0c"
                fg = "#d3caaa"

                # Cut title length
                max_length = 75

                [mouse] button = "3" func = "clientlist"  [/mouse]
                [mouse] button = "4" func = "client_next" [/mouse]
                [mouse] button = "5" func = "client_prev" [/mouse]
        [/selbar]

[/bar]

[layouts]
        fg = "#d3caaa"
        bg = "#3f3e3c"

        # Border around the layout button.
        border = false

        # Value menu or switch.
        system = "menu"

        # Value left or right.
        placement = "right"

        # Keep layout geo for free layout
        keep_layout_geo = true

        # Symbol displayed for the selected layout in the list
        selected_layout_symbol = ">"

        # Width of layout button
        # layout_button_width = x

        # Tiling layouts
        [layout] type = "tile_right"         symbol = "RIGHT"   [/layout]
        [layout] type = "tile_left"          symbol = "LEFT"    [/layout]
        [layout] type = "tile_top"           symbol = "TOP"     [/layout]
        [layout] type = "tile_bottom"        symbol = "BOTTOM"  [/layout]
        [layout] type = "tile_grid"          symbol = "GRID"    [/layout]
        [layout] type = "tile_grid_vertical" symbol = "VGRID"   [/layout]
        [layout] type = "mirror_vertical"    symbol = "MIRROR"  [/layout]
        [layout] type = "mirror_horizontal"  symbol = "VMIRROR" [/layout]
        [layout] type = "max"                symbol = "MAX"     [/layout]
        [layout] type = "free"               symbol = "FREE"    [/layout]

[/layouts]

[tags]
        [default_tag]
             name             = "new tag"
             mwfact           = 0.5
             nmaster          = 1
             layout           = "tile_right"
             resizehint       = false
             infobar_position = "top"
        [/default_tag]

        # Wrap tags at end
        tag_round      = false

        # Press tag number again to toggle between previous tag
        tag_auto_prev  = false

        occupied_bg    = "#3f3e3c"
        occupied_fg    = "#d3caaa"
        sel_fg         = "#d3caaa"
        sel_bg         = "#6f6e6c"
        urgent_bg      = "#fcaf3e"
        urgent_fg      = "#000000"

        # If true, number of the tag will be used for name
        name_count     = false

        #default_name   = "new tag" # deprecated, use [default_tag] instead
        #default_layout = "tile_right" # deprecated, use [default_tag] instead

        # Border around the tag buttons.
        border      = false

        # Hide empty tags in tag list
        autohide    = false

        # Mouse buttons action on tag.
        mouse_button_tag_sel       = "1"
        mouse_button_tag_transfert = "2"
        mouse_button_tag_add       = "3"
        mouse_button_tag_next      = "5"
        mouse_button_tag_prev      = "4"

        #[tag]
        #        name             = "1"
        #        screen           = 0
        #        mwfact           = 0.65
        #        nmaster          = 1
        #        layout           = "tile_right"
        #        resizehint       = false
        #        infobar_position = "top"
        #
        #       #[mouse] [/mouse] Possible multi mouse section
        #[/tag]

        # clients option is *DEPRECATED* but works, see [rules] section
        #[tag] name = "two"  clients = {"Browser"} [/tag]
        [tag] name = "1" [/tag]
        [tag] name = "2" [/tag]
        [tag] name = "3" [/tag]
        [tag] name = "4" [/tag]
        [tag] name = "5" [/tag]
        [tag] name = "6" [/tag]
        [tag] name = "7" [/tag]
        [tag] name = "8" [/tag]
        [tag] name = "9" [/tag]
[/tags]

[root]
        # Command you can execute to set the background.
        ### Already loaded background
        #background_command = "xsetroot -solid black"

        [mouse] button = "5" func = "tag_next"              [/mouse]
        [mouse] button = "4" func = "tag_prev"              [/mouse]
        [mouse] button = "3" func = "menu" cmd = "rootmenu" [/mouse]
[/root]

[client]
        client_round         = true
        client_auto_center   = false
        border_height        = 6
        border_shadow        = false
        #border_normal        = "#1c1c1c"
        #resize_corner_normal = "#1c1c1c"
        border_normal        = "#1f1e1c"
        resize_corner_normal = "#1f1e1c"
        #border_focus         = "#4b324c"
        #resize_corner_focus  = "#4b324c"
        border_focus         = "#3f3e3c"
        resize_corner_focus  = "#3f3e3c"

        ## Red
        #border_focus         = "#591a32"
        #resize_corner_focus  = "#591a32"

        #default_open_tag     = 4 # send all client that have no tag rule in this default tag
        #default_open_screen  = 1 # same as above but for the screen

        # Space between tiled clients
        padding = 0

        # Modifier for mouse use
        modifier = "Super"

        # *DEPRECATED* but works, see [rules] section
        # Set automatic free or max client
        # autofree = "xterm|MPlayer"
        # automax  = "Navigator"

        [mouse] button = "1" func = "client_raise" [/mouse]
        [mouse] button = "1" func = "mouse_move"   [/mouse]
        [mouse] button = "2" func = "client_kill"  [/mouse]
        [mouse] button = "3" func = "client_raise" [/mouse]
        [mouse] button = "3" func = "mouse_resize" [/mouse]

        # Remove this section to delete the titlebar.
#       [titlebar]
#               stipple   = false
#               height    = 22
#               fg_normal = "#d6d69c"
#               fg_focus  = "#fcaf3e"

#               [mouse] button = "1" func = "client_raise" [/mouse]
#               [mouse] button = "1" func = "mouse_move"   [/mouse]
#               [mouse] button = "2" func = "client_kill"  [/mouse]
#               [mouse] button = "3" func = "client_raise" [/mouse]
#               [mouse] button = "3" func = "mouse_resize" [/mouse]

#              #[button]
#              #        # Available "free", "max", "tile" flags of button.
#              #        flags = "free,max,tile"
#              #        [mouse] button = "1" func = "client_kill"             [/mouse]
#              #        [mouse] button = "3" func = "menu" cmd = "clientmenu" [/mouse]
#              #
#              #        #[line] coord = {1, 1, 4, 1} [/line]
#              #        #[line] coord = {1, 1, 1, 4} [/line]
#              #        #[line] coord = {1, 4, 4, 4} [/line]
#              #[/button]
#       [/titlebar]
[/client]

[rules]
       # Example of rule for MPlayer
       #[rule]
       #        instance = "xv"       # First part of WM_CLASS
       #        class    = "MPlayer"  # Seconf part of WM_CLASS, not needed if first part is correct
       #        # role = ""           # WM_WINDOW_ROLE
       #        screen   = 0          # Screen to use
       #        tag      = 2          # Tag number of apps
       #        free     = true       # Set automatic free client
       #        max      = false      # Set automatic maximized client
       #[/rule]

       [rule]
               #instance = "xv"       # First part of WM_CLASS
               class    = "MPlayer"  # Seconf part of WM_CLASS, not needed if first part is correct
               # role = ""           # WM_WINDOW_ROLE
               #screen   = 0          # Screen to use
               #tag      = 2          # Tag number of apps
               free     = true       # Set automatic free client
               max      = false      # Set automatic maximized client
       [/rule]

       [rule]
               instance = "feh"       # First part of WM_CLASS
               class    = "feh"  # Seconf part of WM_CLASS, not needed if first part is correct
               # role = ""           # WM_WINDOW_ROLE
               #screen   = 0          # Screen to use
               #tag      = 2          # Tag number of apps
               free     = true       # Set automatic free client
               max      = false      # Set automatic maximized client
       [/rule]
[/rules]

[menu]
        # Default menu, binded on the root window, button 3.
        [set_menu]
                name = "rootmenu"

                # place_at_mouse = false
                # x = 40 y = 50

                # Available "center", "left", "right" menu align. Default: "center".
                align = "left"

                fg_focus  = "#d3caaa" bg_focus  = "#4f4e4c"
                fg_normal = "#d3caaa" bg_normal = "#0f0e0c"

                [item] name = "Terminal"         func = "spawn" cmd = "roxterm || xterm" [/item]
                [item] name = "Change Wallpaper" func = "spawn" cmd = "nitrogen" [/item]
                [item] name = "NVIDIA Settings" func = "spawn" cmd = "nvidia-settings" [/item]
                [item] name = "NVIDIA Settings (root)" func = "spawn" cmd = "gksudo nvidia-settings" [/item]
                #[item] name = "Next Tag"        func = "tag_next"                  [/item]
                #[item] name = "Previous Tag"    func = "tag_prev"                  [/item]
                #[item] name = "Next Layout"     func = "layout_next"               [/item]
                #[item] name = "Previous Layout" func = "layout_prev"               [/item]
                [item] name = "Toggle Infobar"  func = "toggle_infobar_position"   [/item]
                [item] name = "Quit WMFS"       func = "quit"                      [/item]

                #[item] name = "Applications" submenu = "appmenu"                   [/item]
        [/set_menu]

        [set_menu]
                name = "appmenu"
                align = "left"

                fg_focus  = "#0c0c0c" bg_focus  = "#7E89A2"
                fg_normal = "#9F9AB3" bg_normal = "#0c0c0c"

                [item] name = "Browser"         func = "spawn" cmd = "firefox"     [/item]
                [item] name = "Calculator"      func = "spawn" cmd = "xcalc"       [/item]
        [/set_menu]

        [set_menu]
                name = "clientmenu"
                align = "left"

                fg_focus  = "#D4D4D4" bg_focus  = "#003366"
                fg_normal = "#D4D4D4" bg_normal = "#0c0c0c"

                # Check items: possible 'check_max' or 'check_free'.
                [item] name = "Close"    func = "client_kill"                      [/item]
                [item] name = "Maximize" func = "toggle_max"  check = "check_max"  [/item]
                [item] name = "Free"     func = "toggle_free" check = "check_free" [/item]
        [/set_menu]
[/menu]

[launcher]
        [set_launcher]
                # Limit size of the launcher window (px)
                #width_limit = 300

                name = "launcher_exec"
                prompt = "Exec: "
                command = "exec"
        [/set_launcher]

        #ViWMFS : manage wmfs with vi-based command.
        [set_launcher]
                name = "viwmfs"
                prompt = "> "
                command = "wmfs -V"
        [/set_launcher]
[/launcher]

[keys]
         # Reload the configuration of wmfs.
        [key] mod = {"Control", "Super"} key = "r" func = "reload" [/key]

        # Open a terminal.
        #[key] mod = {"Control"} key = "Return" func = "spawn" cmd = "xterm" [/key]

        # Kill the selected client.
        [key] mod = {"Super"} key = "c" func = "client_kill" [/key]

        # Quit wmfs.
        [key] mod = {"Shift", "Super"} key = "q" func = "quit" [/key]

        # Swap current client with the next.
        [key] mod = {"Super", "Shift"} key = "j" func = "client_swap_next" [/key]

        # Swap current client with the previous.
        [key] mod = {"Super", "Shift"} key = "k" func = "client_swap_prev" [/key]

        # Toggle maximum the selected client
        [key] mod = {"Super"} key = "m" func = "toggle_max" [/key]

        # Toggle free the selected client.
        [key] mod = {"Super", "Shift"} key = "space" func = "toggle_free" [/key]

        # Toggle the position of the infobar.
        [key] mod = {"Super"         } key = "b" func = "toggle_infobar_position" [/key]
        [key] mod = {"Super", "Shift"} key = "b" func = "toggle_infobar_display" [/key]

        # Toggle the resizehint of the current tag/screen
        [key] mod = {"Shift", "Super"} key = "r" func = "toggle_resizehint" [/key]

        # Toggle the tag_autohide mode
        [key] mod = {"Shift", "Super"} key = "t" func = "toggle_tagautohide" [/key]

        # Select the next client.
        [key] mod = {"Super"} key = "j" func = "client_next" [/key]

        # Select the previous client.
        [key] mod = {"Super"} key = "k" func = "client_prev" [/key]

        # Select the next tag.
        #[key] mod = {"Super", "Control"} key = "l" func = "tag_next" [/key]

        # Select the previous tag.
        #[key] mod = {"Super", "Control"} key = "h" func = "tag_prev" [/key]

        # Select the next visible tag.
        [key] mod = {"Super", "Alt"} key = "l" func = "tag_next_visible" [/key]

        # Select the previous visible tag.
        [key] mod = {"Super", "Alt"} key = "h" func = "tag_prev_visible" [/key]

        # Set the next layout.
        [key] mod = {"Super"} key = "u" func = "layout_next" [/key]

        # Set the previous layout.
        [key] mod = {"Super", "Shift"} key = "u" func = "layout_prev" [/key]

        # Increase mwfact.
        [key] mod = {"Super"} key = "l" func = "set_mwfact" cmd = "+0.025" [/key]

        # Decrease mwfact.
        [key] mod = {"Super"} key = "h" func = "set_mwfact" cmd = "-0.025" [/key]

        # Increase nmaster.
        [key] mod = {"Super"} key = "d" func = "set_nmaster" cmd = "+1" [/key]

        # Decease nmaster.
        [key] mod = {"Super", "Shift"} key = "d" func = "set_nmaster" cmd = "-1" [/key]

        #Launcher.
        #[key] mod = {"Super"} key = "p" func = "launcher" cmd = "launcher_exec" [/key]
        #[key] mod = {"Super"} key = "o" func = "launcher" cmd = "launcher_exec" [/key]

        #ViWMFS
        [key] mod = {"Super"} key = "Escape" func = "launcher" cmd = "viwmfs" [/key]

        # change screen
        [key] mod = {"Super"         } key = "Tab" func = "screen_next" [/key]
        [key] mod = {"Super", "Shift"} key = "Tab" func = "screen_prev" [/key]

        # change screen (alt)
        [key] mod = {"Super"  "Control"} key = "l" func = "screen_next" [/key]
        [key] mod = {"Super", "Control"} key = "h" func = "screen_prev" [/key]
        
        # swap client in the next/prev screen
        [key] mod = {"Super", "Shift"} key = "l" func = "client_screen_next" [/key]
        [key] mod = {"Super", "Shift"} key = "h" func = "client_screen_prev" [/key]

        # Set the tag x.
        [key] mod = {"Super"} key = "1" func = "tag" cmd = "1" [/key]
        [key] mod = {"Super"} key = "2" func = "tag" cmd = "2" [/key]
        [key] mod = {"Super"} key = "3" func = "tag" cmd = "3" [/key]
        [key] mod = {"Super"} key = "4" func = "tag" cmd = "4" [/key]
        [key] mod = {"Super"} key = "5" func = "tag" cmd = "5" [/key]
        [key] mod = {"Super"} key = "6" func = "tag" cmd = "6" [/key]
        [key] mod = {"Super"} key = "7" func = "tag" cmd = "7" [/key]
        [key] mod = {"Super"} key = "8" func = "tag" cmd = "8" [/key]
        [key] mod = {"Super"} key = "9" func = "tag" cmd = "9" [/key]

        # Transfert selected client to x.
        [key] mod = {"Super", "Shift"} key = "1" func = "tag_transfert" cmd = "1" [/key]
        [key] mod = {"Super", "Shift"} key = "2" func = "tag_transfert" cmd = "2" [/key]
        [key] mod = {"Super", "Shift"} key = "3" func = "tag_transfert" cmd = "3" [/key]
        [key] mod = {"Super", "Shift"} key = "4" func = "tag_transfert" cmd = "4" [/key]
        [key] mod = {"Super", "Shift"} key = "5" func = "tag_transfert" cmd = "5" [/key]
        [key] mod = {"Super", "Shift"} key = "6" func = "tag_transfert" cmd = "6" [/key]
        [key] mod = {"Super", "Shift"} key = "7" func = "tag_transfert" cmd = "7" [/key]
        [key] mod = {"Super", "Shift"} key = "8" func = "tag_transfert" cmd = "8" [/key]
        [key] mod = {"Super", "Shift"} key = "9" func = "tag_transfert" cmd = "9" [/key]

        # Toggle additional tags (x) on the current tag
        [key] mod = {"Control", "Super"} key = "1" func = "tag_toggle_additional" cmd = "1" [/key]
        [key] mod = {"Control", "Super"} key = "2" func = "tag_toggle_additional" cmd = "2" [/key]
        [key] mod = {"Control", "Super"} key = "3" func = "tag_toggle_additional" cmd = "3" [/key]
        [key] mod = {"Control", "Super"} key = "4" func = "tag_toggle_additional" cmd = "4" [/key]
        [key] mod = {"Control", "Super"} key = "5" func = "tag_toggle_additional" cmd = "5" [/key]
        [key] mod = {"Control", "Super"} key = "6" func = "tag_toggle_additional" cmd = "6" [/key]
        [key] mod = {"Control", "Super"} key = "7" func = "tag_toggle_additional" cmd = "7" [/key]
        [key] mod = {"Control", "Super"} key = "8" func = "tag_toggle_additional" cmd = "8" [/key]
        [key] mod = {"Control", "Super"} key = "9" func = "tag_toggle_additional" cmd = "9" [/key]

        # unlisted fonctions that can be used in [key] func = ""
        # client_focus_{right, left, top, bottom}
        # client_ignore_tag # Toggle the client in ignore_tag (display the client on all tags)
        # tag_prev_sel # go back to the previous selected tag
        # tag_transfert_{next, prev} 
        # tag_urgent # go to the urgent tag
        # tag_swap_{next, prev} # swap tag with the previous/next one
        # tag_last # go to the last tag
        # tag_stay_last # toggle the current tag as the last one
        # toggle_abovefc 
        # screen_prev_sel # go to the previous screen selected
        # set_layout # set layout. need to be called with cmd = "<layout_name>"
        # ignore_next_client_rules # ignore the rule the next time a rule is called
[/keys]
